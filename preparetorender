#!/usr/bin/env python3
"""
Script para preparar el proyecto Agrosoft para despliegue en Render
"""

import os
import subprocess
import sys

def run_command(command):
    """Ejecuta un comando y muestra el resultado"""
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úì {command}")
            return True
        else:
            print(f"‚úó {command}")
            print(f"Error: {result.stderr}")
            return False
    except Exception as e:
        print(f"Error ejecutando {command}: {e}")
        return False

def main():
    print("üöÄ Preparando Agrosoft para Render...")
    print("=" * 50)
    
    # Verificar que estamos en el directorio correcto
    if not os.path.exists('manage.py'):
        print("Error: No se encuentra manage.py. Ejecuta este script desde el directorio ra√≠z del proyecto.")
        sys.exit(1)
    
    # Ejecutar collectstatic
    print("\nüì¶ Recopilando archivos est√°ticos...")
    if run_command("python manage.py collectstatic --noinput"):
        print("‚úì Archivos est√°ticos recopilados correctamente")
    else:
        print("‚ö†Ô∏è  Error al recopilar archivos est√°ticos")
    
    # Verificar requirements.txt
    print("\nüìã Verificando dependencias...")
    if os.path.exists('requirements.txt'):
        with open('requirements.txt', 'r') as f:
            requirements = f.read()
        
        required_packages = ['gunicorn', 'psycopg2-binary', 'whitenoise']
        missing = [pkg for pkg in required_packages if pkg not in requirements]
        
        if missing:
            print(f"‚ö†Ô∏è  Paquetes faltantes en requirements.txt: {', '.join(missing)}")
        else:
            print("‚úì Todas las dependencias necesarias est√°n presentes")
    else:
        print("‚úó No se encuentra requirements.txt")
    
    # Verificar archivos de configuraci√≥n
    print("\n‚öôÔ∏è  Verificando archivos de configuraci√≥n...")
    config_files = ['render.yaml', '.gitignore', 'gunicorn.conf.py', '.env']
    
    for file in config_files:
        if os.path.exists(file):
            print(f"‚úì {file} encontrado")
        else:
            print(f"‚ö†Ô∏è  {file} no encontrado")
    
    print("\n" + "=" * 50)
    print("‚úÖ Preparaci√≥n completada!")
    print("\nüìã Pr√≥ximos pasos:")
    print("1. Revisa que todos los archivos de configuraci√≥n est√©n correctos")
    print("2. Sube el proyecto a GitHub (opcional pero recomendado)")
    print("3. Sigue las instrucciones en DEPLOYMENT.md para desplegar en Render")
    print("4. No olvides configurar las variables de entorno en Render")

if __name__ == "__main__":
    main()
